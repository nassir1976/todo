{"version":3,"sources":["components/customHooks/useForm.js","components/todo/form.js","context/Seettings.js","components/todo/list.js","components/customHooks/useAjax.js","context/AuthProvider.js","components/auth/login.js","components/auth/Auth.js","components/todo/todo.js","app.js","index.js"],"names":["useForm","callback","useState","item","setItem","e","target","name","value","preventDefault","reset","TodoForm","handleInputChange","handleSubmit","Card","style","width","onSubmit","data-testid","placeholder","onChange","Form","Control","defaultValue","type","min","max","Button","className","color","variant","SettingsContext","React","createContext","SettingsProvider","props","sort","setSort","completed","setCompleted","numberItems","setNumberItems","state","updateSort","updateCompleted","updateNumber","useEffect","console","log","Provider","children","TodoList","list","handleComplete","handleDelete","context","useContext","page","setPage","newList","setNewList","switchPage","innerText","displayComplete","filter","listSort","param","nextList","a","b","pagination","i","push","Consumer","settings","border","marginLeft","marginTop","Body","size","onClick","complete","handleToggle","handleSort","handleNumberItems","length","required","ListGroup","map","key","_id","marginBottom","Title","display","flexDirection","justifyContent","alignItems","borderBottom","height","assignee","Text","fontSize","text","Link","href","float","difficulty","useAjax","options","request","response","setResponse","url","axios","data","input","method","mode","headers","validateStatus","getData","AuthContext","AuthProvider","user","setUser","token","setToken","isValidUser","cookie","save","load","validUser","jwt","decode","username","login","password","Authorization","btoa","logout","remove","Login","userDetails","handleChange","condition","Auth","capability","userData","capabilities","includes","isAutrized","todoAPI","ToDo","setList","results","getItems","document","title","addItem","removeItem","id","Navbar","bg","App","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.251caca8.chunk.js","sourcesContent":["import { useState} from 'react';\n\nconst useForm = (callback) => {\n  const [item, setItem] = useState({});\n  const handleInputChange = e => {\n    setItem({...item, [e.target.name]: e.target.value } );\n  };\n  \n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    callback(item);\n    setItem({});\n  };\n\nreturn[\n\n  handleInputChange,\n  handleSubmit\n  ]\n}\n\nexport default useForm;\n\n","import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport useForm from '../customHooks/useForm.js'\n\n\nfunction TodoForm({callback}) {\n  const [handleInputChange, handleSubmit] = useForm(callback)\n\n\n  return (\n    <>\n      <Card style={{ width: '25rem' }}>\n        <h4>Add To Do Item</h4>\n        <form onSubmit={handleSubmit}>\n          <label>\n            <span>To Do Item</span>\n            <input data-testid=\"FORM\"\n              name=\"text\"\n              placeholder=\"Add To Do List Item\"\n              onChange={handleInputChange}\n            />\n          </label>\n          <label>\n            {/* <Form.Control type=\"email\" placeholder=\"Enter email\" /> */}\n            <span>Difficulty Rating</span>\n            < Form.Control defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n          </label>\n          <label>\n            <span>Assigned To</span>\n            <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n          </label>\n          <Button className=\"button\" style={{ color: \"white\" }} variant=\"primary\" type=\"submit\">Add Item</Button>\n        </form>\n      </Card>\n    </>\n  );\n}\n\n\nexport default TodoForm;\n\n\n\n","import React, { useState, useEffect } from 'react';\n\n//create the context\nexport const SettingsContext = React.createContext();\n\n\nfunction SettingsProvider(props) {\n  // define the value that any child components able to read .\n  let [sort, setSort] = useState('difficulty');\n  let [completed, setCompleted] = useState('true');\n  let[numberItems, setNumberItems] = useState(4);\n  // let[pagination,setPagination]=useState(0)\n  \n  const state = {\n      sort,\n      completed,\n      numberItems,\n      updateSort: setSort,\n      updateCompleted: setCompleted,\n      updateNumber: setNumberItems,\n      // pagination:setPagination,\n    }\n\n  useEffect(() =>{ \n    console.log(completed);\n  }, [completed])\n\n  useEffect(() =>{ \n    console.log(numberItems);\n  }, [numberItems])\n\n  // useEffect(() =>{ \n  //   console.log(pagination);\n  // }, [pagination])\n\n    return(\n      <SettingsContext.Provider value={state}>\n        {props.children}\n      </SettingsContext.Provider>\n    );\n}\n\nexport default SettingsProvider;","\nimport Card from 'react-bootstrap/Card'\nimport React, { useState, useEffect, useContext } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { SettingsContext } from '../../context/Seettings.js'\nimport Button from 'react-bootstrap/Button'\n\n\nimport './list.scss'\n\nfunction TodoList({ list, handleComplete, handleDelete }) {\n\n  let context = useContext(SettingsContext)\n  const [page, setPage] = useState(1);\n  const [newList, setNewList] = useState(list)\n\n  //handle completed\n  const handleToggle = (e, settings) => {\n    e.preventDefault()\n    settings.updateCompleted(!settings.complete)\n    displayComplete()\n\n  }\n  //handlesort\n  const handleSort = (e, settings) => {\n    e.preventDefault()\n    settings.updateSort(e.target.value)\n    listSort();\n  }\n\n  // setting item on page handler \n  const handleNumberItems = (e, settings) => {\n    e.preventDefault()\n    settings.updateNumber(e.target.numberItems.value)\n    // console.log(settings.numberItems)\n    pagination();\n  }\n  // switch page function \n  const switchPage = (e) => {\n    if (e.target.innerText === 'previous') {\n      if (page > 1) {\n        setPage(page - 1)\n        console.log('pagedes.....', page)\n      }\n    } else {\n      setPage(page + 1)\n      console.log('pagrincrement', page)\n    }\n  }\n  \n\n\n  const displayComplete = () => {\n    if (context.completed === 'false') {\n      setNewList(list)\n    } else {\n      setNewList(newList.filter(item => !item.completed))\n    }\n  }\n  const listSort = () => {\n    let param = context.sort;\n    console.log(param);\n    let nextList = newList.sort((a, b) => {\n      if (a[context.sort] > b[context.sort]) {\n        return 1;\n      } else if (a[context.sort] < b[context.sort]) {\n        return -1;\n      } else\n        return 0\n    });\n    setNewList(nextList);\n  }\n\n  const pagination = () => {\n    if (newList[0]) {\n      let nextList = [];\n      console.log(list);\n\n      let min = context.numberItems * (page - 1)\n      let max = (context.numberItems * page);\n      for (let i = min; i < max; i++) {\n        // console.log(i);\n        nextList.push(newList[i]);\n      }\n      // console.log(nextList);\n      setNewList(nextList);\n    }\n  }\n\n\n\n  useEffect(() => {\n    setNewList(list);\n  }, [list])\n\n\n  return (\n    <>\n      <SettingsContext.Consumer>\n        {settings => (\n          <Card style={{ border: 'solid black', width: '50%', marginLeft: '20vw', marginTop: '30px' }}>\n            <Card.Body>\n\n              <div className=\"top\">\n                <label>  Display Completed\n                  <Button style={{ marginLeft: '8px' }} size=\"sm\" onClick={((e) => handleToggle(e, settings))}> {settings.completed}</Button>\n                </label>\n                {/* <label style={{ marginLeft: '4px' }}>\n                Sort By\n                </label> */}\n                {/* <form className=\"numberofitems\" onSubmit={((e) => handleNumberItems(e, settings))}>\n              <input type=\"number\" name=\"numberItems\" required placeholder={settings.numberItems} ></input>\n              <button className=\"ItemsonPage\" type=\"submit\">Items on Page</button>\n             </form>  */}\n                <select onChange={((e) => handleSort(e, settings))}>\n\n                  <option value=\"difficulty\">Sort By</option>\n                  <option name=\"difficulty\">Difficulty</option>\n                  <option name=\"assignee\" value=\"assignee\">Assignee</option>\n                  {/* <option name=\"text\" value=\"text\">Task</option> */}\n                </select>\n\n              </div>\n              <label>Items on Page\n                <input style={{ marginLeft: '8px', width: '5vw' }} onSubmit={(e) => handleNumberItems(e, settings)} type=\"number\" name=\"numberItems\" min=\"1\" max={list.length} required placeholder={settings.numberItems} ></input>\n              </label>\n\n            </Card.Body>\n          </Card>\n        )}\n\n      </SettingsContext.Consumer>\n      <ListGroup style={{ width: '50%', marginLeft: '20vw', marginTop: '30px' }}>\n        {list.map(item => (\n          <Card key={item._id} style={{ width: '25rem', marginBottom: '4px' }}>\n            <Card.Body>\n              <Card.Title style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', borderBottom: '', height: '2.5vh' }}>\n                <span className={item.complete === true ? \"complete complete-pill\" : \"pending progress-pill\"} onClick={() => handleComplete(item._id)}>{item.complete === true ? \"Complete\" : \"Pending\"}</span>\n                <div>\n                  <span className=\"assigned-person\">{item.assignee}</span>\n                </div>\n                <button className=\"delete-button\" onClick={() => handleDelete(item._id)}>\n                  X\n                </button>\n              </Card.Title>\n\n              <Card.Text style={{ color: 'green', fontSize: '1.20rem' }}>\n                {item.text}\n              </Card.Text>\n              <Card.Link href=\"#\"></Card.Link>\n              <Card.Text style={{ float: 'right', fontSize: '0.80rem' }}>Difficulty: {item.difficulty}</Card.Text>\n            </Card.Body>\n\n          </Card>\n        ))}\n        <div className=\"flex-child\">\n          <Button size=\"sm\" className=\"flex-child\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', color: \"white\", border: '0.1px solid black', width: \"80px\", height: '2.5vh' }} onClick={switchPage}>Previous</Button>\n          <div className=\"pg-number\">\n            {page}\n          </div>\n          <Button className=\"flex-child\" size=\"sm\" style={{ display: 'flex', flexDirection: 'row', justifyContent: 'space-between', color: \"white\", alignItems: 'center', border: \" 0.1px solid black\", width: \"80px\", height: '2.5vh' }} onClick={switchPage}>Next</Button>\n        </div>\n\n      </ListGroup>\n\n    </>\n\n  );\n\n}\n\nexport default TodoList;\n\n\n\n\n","import { useEffect, useState } from 'react'\nimport axios from 'axios'\n// import { options } from 'superagent'\n\n\nconst useAjax = () => {\n  const [options, request] = useState({})\n  const [response, setResponse] = useState({})\n\n  useEffect(() => {\n    async function getData(){\n      if(!options.url){\n      return\n    }\n    try {\n      let response = await axios({\n        data: options.input,\n        url: options.url,\n        method: options.method,\n        mode: options.mode,\n        headers: options.headers,\n        validateStatus: options.validateStatus,\n\n\n      })\n      setResponse(response.data)\n    } catch (error) {\n    }\n  }\n    getData()\n },[options])\nreturn [response, request]\n}\n\nexport default useAjax;\n\n","import React, {useState, useEffect} from 'react';\nimport jwt from 'jsonwebtoken';\nimport useAjax from '../components/customHooks/useAjax.js';\nimport cookie from 'react-cookies';\n\n// import TodoForm from '../components/todo/form.js';\n\n\n\nconst API_URL = 'https://api-js401.herokuapp.com';\n\n\nexport const AuthContext = React.createContext();\n\nfunction AuthProvider(props) {\n\n  let [user, setUser] = useState({})\n  let [token,setToken]= useState('')\n  let [response, request]= useAjax()\n\n  useEffect(() => {\n    console.log(response);\n    if (isValidUser(response.token)) {\n      setUser(response.user);\n      setToken(response.token);\n      cookie.save('auth', response.token);\n    }\n  },[response]);\n\n  useEffect(() => {\n    let token = cookie.load('auth');\n    if (token) {\n      setToken(token);\n    }\n  }, []);\n\n  const isValidUser = (token) => {\n    const validUser = jwt.decode(token);\n    if (validUser) {\n      if (validUser.username === user.username) return true;\n    } else {\n      return false\n    }\n  }\n\n  const login = (username, password) => {\n    // basic authentication header options\n    let options = {\n      url: `${API_URL}/signin`,\n      method: 'post',\n      headers: {\n        Authorization: `Basic ${btoa(`${username}:${password}`)}`\n      },\n      input:{}\n    }\n    request(options);\n  }\n\n  const logout = () => {\n    setUser({});\n    setToken('');\n    cookie.remove('auth');\n  }\n\n  return (\n\n   \n    <AuthContext.Provider value={{ user, token, login, logout }}>\n      {props.children}\n    </AuthContext.Provider>\n  \n  )\n}\n\nexport default AuthProvider;\n\n\n\n","import React, {useContext} from 'react';\n\nimport useForm from '../customHooks/useForm.js';\nimport {If, Then, Else} from 'react-if';\nimport {AuthContext} from '../../context/AuthProvider.js';\n\n\n\n\n\nfunction Login() {\n\n  const [handleChange, handleSubmit] = useForm(handleLogin);\n  const context = useContext(AuthContext);\n\n  // const handleChange = (e) => {\n  //   setUser( {...user, [e.target.name]: e.target.value})\n  // }\n  function handleLogin(userDetails){\n    context.login(userDetails.username,userDetails.password)\n  }\n  \n\n  // const handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   // send the user object to: context\n  //   context.login(user);\n  // }\n\n\n  return (\n    <If condition={context.token}>\n      <Then>\n        <button onClick={context.logout}>Log Out</button>\n      </Then>\n      <Else>\n        <form  className=\"form\"  onSubmit={handleSubmit}>\n          <input placeholder=\"username\" name=\"username\" onChange={handleChange} />\n          <input name=\"password\" type=\"password\" onChange={handleChange} />\n          <button  name=\"password\">Login</button>\n        </form>\n      </Else>\n    </If>\n  )\n\n}\n\nexport default Login;\n","import React, { useContext } from 'react';\nimport { AuthContext } from '../../context/AuthProvider.js'\nimport jwt from 'jsonwebtoken';\nimport { When } from 'react-if';\n// import {LoginContext} from '../../context/AuthProvider.js';\n\nfunction Auth({ capability, children }) {\n\n  let context = useContext(AuthContext)\n\n  const isAutrized = (capability) => {\n    let userData = jwt.decode(context.token)\n    if (userData) {\n      return userData.capabilities.includes(capability) ? true : false\n    }\n    return false\n\n  }\n  return (\n    <>\n      <When condition={isAutrized(capability)}>\n        {children}\n      </When>\n      {/* <When condition={!isAutrized(capability)}>\n        <h4>not Authrized</h4>\n      </When> */}\n    </>\n  )\n\n\n}\n\nexport default Auth;\n\n","import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport { Navbar } from 'react-bootstrap';\nimport './todo.scss';\nimport useAjax from '../customHooks/useAjax.js'\nimport axios from 'axios';\nimport SettingsProvider from '../../context/Seettings.js'\nimport AuthProvider from '../../context/AuthProvider.js'\nimport Login from '../auth/login.js';\nimport Auth from '../auth/Auth.js';\n\n\n\nconst todoAPI = 'https://api-js401.herokuapp.com/api/v1/todo';\n\nexport default function ToDo() {\n\n\n  const [request, response] = useAjax()\n  const [list, setList] = useState([]);\n  // const [data, setData] = useState([])\n\n  useEffect(() => {\n    if (response.results) {\n      response.results && setList(response.results)\n    } else {\n      getItems()\n    }\n  }, [response]);\n  useEffect(() => {\n    document.title = `To Do List:${list.filter(item => !item.complete)}.length`;\n  }, [list])\n\n  console.log(response)\n\n  //==========getitem==========//\n\n  const getItems = async () => {\n    let request = await axios({\n      // const options = {\n      url: todoAPI,\n      method: 'get',\n      mode: 'cors',\n      headers:{'content-Type':'application/json'},\n      // }\n      // response(options)\n    })\n    let data = request.data.results\n    setList(data)\n  }\n\n  useEffect(() => {\n    getItems()\n  }, []);\n\n// =============postItem==== //\n  const addItem = async (input) => {\n    let request = await axios({\n      url: todoAPI,\n      method: 'post',\n      mode: 'cors',\n        headers:{'content-Type':'application/json'},\n      data:input\n      // response(options)\n    })\n    getItems()\n    return request\n  }\n\n  // console.log(request)\n\n  //complete =========or putitem===\n  const toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n\n      item.complete = !item.complete;\n\n      const url = `${todoAPI}/${id}`;\n      // const input = {\n      //   text: item.text,\n      //   assignee: item.assignee,\n      //   difficulty: item.difficulty,\n      //   id: item.id,\n      //   complete: item.complete,\n\n      // }\n\n      const options = {\n        url: url,\n        method: 'put',\n        mode: 'cors',\n        headers: { 'content-Type': 'application/json' },\n        data: { complete: !item.complete },\n      }\n      response(options)\n\n    }\n  };\n  \n  //=============remove==========//\n\n  const removeItem = async id => {\n    let request = await axios({\n       url : `${todoAPI}/${id}`,\n        method: 'delete',\n        mode: 'cors',\n        headers: { 'content-Type': 'application/json' },\n\n    })\n    getItems()\n    return request;\n  }\n  \n  return (\n    <>\n      <AuthProvider>\n        <header>\n          <Navbar style={{ color: \"white\" }} bg=\"primary\" variant=\"dark\" className=\"headerOne\">\n            Home\n\n            <Login />\n\n          </Navbar>\n          <br></br>\n        </header>\n        <Auth capability=\"read\">\n          <Navbar className=\"toDoCount\" style={{ color: \"white\" }} bg=\"dark\" variant=\"dark\" >\n            To Do List Manager({list.filter(item => !item.complete).length})\n          </Navbar>\n          <section className=\"todo\">\n            \n            <Auth capability=\"create\">\n              <div className=\"formGroup\">\n                 <TodoForm callback={addItem} /> \n                 \n                {/* <TodoForm addItem={postItems} */}\n                \n              </div>\n            </Auth>\n            <SettingsProvider>\n              <div className=\"listGroup\">\n                <TodoList\n                  list={list}\n                  handleComplete={toggleComplete}\n                  handleDelete={removeItem}\n                />\n              </div>\n            </SettingsProvider>\n          </section>\n        </Auth>\n      </AuthProvider>\n    </>\n  );\n};","import React from 'react';\n\nimport ToDo from './components/todo/todo.js';\n \n import 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n \n    return (\n      <>\n        <ToDo />\n      </>\n    );\n  }\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import  'bootstrap/dist/css/bootstrap.min.css'\nimport App from './app.js';\n\nfunction Main() {\n  \n    return <App />;\n  }\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n\nexport default Main;"],"sourceRoot":""}